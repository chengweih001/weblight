#! /usr/bin/python

import binascii
import sys
import tempfile
import uuid

# For these, the shorter the better
URLS = ['https://sowbug.github.io/weblight',
        'http://localhost:8000']

f = tempfile.TemporaryFile()

# 0-3: signature
f.write('WebL')

# 4-5: version (BCD)
f.write(binascii.unhexlify('0100'))

# 6-21: serial(16 ASCII bytes)
uuid_str = str(uuid.uuid4())
serial_str = uuid_str[-16:]
f.write(serial_str)

# Write the built-in light program
prog_parts = [
    '010101f4', # Linear RGB transition, 500 msec
    '00100000', # color red
    '020200',   # pause 512 msec
    '00001000', # green
    '020200',
    '00000010', # blue
    '020200',
    '00101000', # yellow
    '020200',
    '00100010', # magenta
    '020200',
    '00001010', # cyan
    '020200',
    # then alternate green/off a couple times
    '00001000', # green
    '00000000', # off
    '020080',
    '00001000', # green
    '00000000', # off
    '020080',
    '00001000', # green
    '00000000', # off
    '020080',
]
program = binascii.unhexlify(''.join(prog_parts))

# 22: program length
f.write(bytearray([len(program)]))

# 23-71: program (up to 48 bytes)
f.write(program)

# 128-: WebUSB URLs (landing page followed by allowed origins, all in
# raw descriptor format)
f.seek(128)

# Horrible copy/paste from wlctl
num_urls = len(URLS)
b = bytearray([num_urls + 5, 0, num_urls + 5, 0, 0])
n = 1
for u in URLS:
  b.extend(bytearray([n]))
  n += 1

for u in URLS:
  if u.startswith("http://"):
    scheme = 0
    u = u[7:]
  elif u.startswith("https://"):
    scheme = 1
    u = u[8:]
  else:
    print("Unrecognized scheme", u)
    sys.exit(1)
  b.extend(bytearray([len(u) + 3, 3, scheme]))
  b.extend(u)

if len(b) > 128:
  print("Allowed origin lengths too big")
  sys.exit(1)

f.write(b)

f.seek(0)
sys.stdout.write(f.read())
f.close()
